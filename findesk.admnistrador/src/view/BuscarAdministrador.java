/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import control.Administrador;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * @author ld_si
 */
//SEU LELEO GAYuhguhg
public class BuscarAdministrador extends javax.swing.JFrame {
    
    private static BuscarAdministrador janelaControl;
    private static DefaultComboBoxModel defaultComboBoxCategoria;
    private static DefaultComboBoxModel defaultComboBoxNome;
    private DefaultTableModel defaultTableResultado;
    public Item itemSelecionado = new Item();
    private Icon defaultIcon;
    private static Point point = new Point();

    /**
     * Creates new form suaJanela
     */
    public BuscarAdministrador(String resultado) {
        initComponents();
        popularComboBoxCategoria();
        jComboBoxCategoria.setModel(defaultComboBoxCategoria);
      
    }
    public BuscarAdministrador() {
        initComponents();
        popularComboBoxCategoria();
        jComboBoxCategoria.setModel(defaultComboBoxCategoria);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCategoria = new javax.swing.JLabel();
        jPanelFundo = new javax.swing.JPanel();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jComboBoxNome = new javax.swing.JComboBox<>();
        jButtonFechar = new javax.swing.JButton();
        jButtonMinimizar = new javax.swing.JButton();
        jLabelPalavraChave = new javax.swing.JLabel();
        jButtonDeletar = new javax.swing.JButton();
        jLabelFoto = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jLabelLogoFindesk = new javax.swing.JLabel();
        jScrollPaneResultado = new javax.swing.JScrollPane();
        jTableResultado = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);

        jLabelCategoria.setBackground(new java.awt.Color(255, 255, 255));
        jLabelCategoria.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelCategoria.setText("CATEGORIAS");
        getContentPane().add(jLabelCategoria);
        jLabelCategoria.setBounds(20, 120, 180, 40);

        jPanelFundo.setBackground(new java.awt.Color(255, 255, 255));
        jPanelFundo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanelFundoMouseDragged(evt);
            }
        });
        jPanelFundo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelFundoMousePressed(evt);
            }
        });
        jPanelFundo.setLayout(null);

        jComboBoxCategoria.setToolTipText("Selecione a categoria desejada.");
        jComboBoxCategoria.setRequestFocusEnabled(false);
        jComboBoxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoriaActionPerformed(evt);
            }
        });
        jPanelFundo.add(jComboBoxCategoria);
        jComboBoxCategoria.setBounds(20, 170, 190, 20);

        jComboBoxNome.setVisible(false);
        jComboBoxNome.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos" }));
        jComboBoxNome.setRequestFocusEnabled(false);
        jComboBoxNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNomeActionPerformed(evt);
            }
        });
        jPanelFundo.add(jComboBoxNome);
        jComboBoxNome.setBounds(20, 240, 190, 20);

        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/FecharPreto.png"))); // NOI18N
        jButtonFechar.setToolTipText("Fechar");
        jButtonFechar.setBorderPainted(false);
        jButtonFechar.setContentAreaFilled(false);
        jButtonFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonFecharMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonFecharMouseExited(evt);
            }
        });
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });
        jPanelFundo.add(jButtonFechar);
        jButtonFechar.setBounds(750, 0, 20, 30);

        jButtonMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/MinimizarPreto.png"))); // NOI18N
        jButtonMinimizar.setToolTipText("Minimizar");
        jButtonMinimizar.setBorderPainted(false);
        jButtonMinimizar.setContentAreaFilled(false);
        jButtonMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMinimizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonMinimizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonMinimizarMouseExited(evt);
            }
        });
        jPanelFundo.add(jButtonMinimizar);
        jButtonMinimizar.setBounds(700, 0, 40, 30);

        jLabelPalavraChave.setVisible(false);
        jLabelPalavraChave.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelPalavraChave.setText("ITENS");
        jPanelFundo.add(jLabelPalavraChave);
        jLabelPalavraChave.setBounds(20, 200, 180, 40);

        jButtonDeletar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonDeletar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/LixeiraPreta.png"))); // NOI18N
        jButtonDeletar.setToolTipText("Excluir item.");
        jButtonDeletar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonDeletar.setBorderPainted(false);
        jButtonDeletar.setContentAreaFilled(false);
        jButtonDeletar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonDeletarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonDeletarMouseExited(evt);
            }
        });
        jButtonDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletarActionPerformed(evt);
            }
        });
        jPanelFundo.add(jButtonDeletar);
        jButtonDeletar.setBounds(690, 510, 50, 40);

        jLabelFoto.setForeground(new java.awt.Color(255, 255, 255));
        jLabelFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanelFundo.add(jLabelFoto);
        jLabelFoto.setBounds(470, 120, 270, 200);

        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/LupaPreta.png"))); // NOI18N
        jButtonBuscar.setToolTipText("Buscar");
        jButtonBuscar.setContentAreaFilled(false);
        jButtonBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonBuscar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jButtonBuscarMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButtonBuscarMouseMoved(evt);
            }
        });
        jButtonBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonBuscarMouseExited(evt);
            }
        });
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        jPanelFundo.add(jButtonBuscar);
        jButtonBuscar.setBounds(210, 160, 57, 33);

        jButtonAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/LapisPreto.png"))); // NOI18N
        jButtonAlterar.setToolTipText("Editar item.");
        jButtonAlterar.setContentAreaFilled(false);
        jButtonAlterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonAlterarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonAlterarMouseExited(evt);
            }
        });
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });
        jPanelFundo.add(jButtonAlterar);
        jButtonAlterar.setBounds(640, 500, 40, 60);

        jLabelLogoFindesk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/FINDESK_LOGO3_Azul_PNG.png"))); // NOI18N
        jPanelFundo.add(jLabelLogoFindesk);
        jLabelLogoFindesk.setBounds(-40, 0, 350, 110);

        jTableResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME", "DESCRIÇÃO", "COR", "SITUAÇÃO DO ITEM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableResultado.setSelectionBackground(new java.awt.Color(0, 191, 255));
        jTableResultado.setSurrendersFocusOnKeystroke(true);
        jTableResultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableResultadoMouseClicked(evt);
            }
        });
        jScrollPaneResultado.setViewportView(jTableResultado);

        jPanelFundo.add(jScrollPaneResultado);
        jScrollPaneResultado.setBounds(0, 330, 780, 150);
        jPanelFundo.add(jSeparator2);
        jSeparator2.setBounds(0, 110, 780, 50);
        jPanelFundo.add(jSeparator1);
        jSeparator1.setBounds(0, 510, 800, 10);

        jButtonVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/VoltarPreto.png"))); // NOI18N
        jButtonVoltar.setToolTipText("Voltar para a tela principal.");
        jButtonVoltar.setContentAreaFilled(false);
        jButtonVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonVoltarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonVoltarMouseExited(evt);
            }
        });
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });
        jPanelFundo.add(jButtonVoltar);
        jButtonVoltar.setBounds(60, 520, 61, 23);

        getContentPane().add(jPanelFundo);
        jPanelFundo.setBounds(0, 0, 800, 600);

        setSize(new java.awt.Dimension(783, 561));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        janelaControl.dispose();
        TelaPrincipal telaPrincipal = new TelaPrincipal();
        telaPrincipal.mostrar();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jComboBoxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaActionPerformed
        Object item = jComboBoxCategoria.getSelectedItem();
        String itemName = item.toString();
        if(itemName == "Todas"){
            jComboBoxNome.setVisible(false);
            jLabelPalavraChave.setVisible(false);
        }else{
            jComboBoxNome.setVisible(true);
            jLabelPalavraChave.setVisible(true);
            popularComboBoxNome("select distinct nomeItem.nome " +
                                "from item, nomeItem, categoria " +
                                "where nomeItem.idNome = item.idNome and " +
                                        "nomeItem.idCategoria = categoria.idCategoria and " +
                                        "categoria.nomeCat like \""
                                        + itemName
                                         + "\";");

            jComboBoxNome.setModel(defaultComboBoxNome);
        }
    }//GEN-LAST:event_jComboBoxCategoriaActionPerformed

    private void jComboBoxNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxNomeActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        String categoria = jComboBoxCategoria.getSelectedItem().toString();
        String nome = jComboBoxNome.getSelectedItem().toString();
        if ( "Todas".equals(categoria)){
            
                    popularResultado("select idItem, nome, descricaoItem, nomeCor, retiradoItem "+
                                     "from item, nomeitem, cor "+
                                     "where nomeitem.idNome = item.idNome and "+
                                     "cor.idCor = item.idCor ");
        }
        if( !"Todos".equals(nome) && !"Todas".equals(categoria)){
        
        popularResultado("select idItem, nome, descricaoItem,nomeCor, retiradoItem "+
                         "from nomeitem, item, categoria, cor "+
                         " where nome like \""+nome+"\"and nomeCat like \""+categoria+"\"and "+
                         "item.idNome = nomeitem.idNome and nomeItem.idCategoria = categoria.idCategoria and "+
                         "cor.idCor = item.idCor ");
        }
        if("Todos".equals(nome) && !"Todas".equals(categoria)){
            
            popularResultado("select idItem, nome, descricaoItem, nomeCor, retiradoItem "+
                             "from nomeitem, item, categoria, cor "+
                             "where item.idNome = nomeitem.idNome and nomeItem.idCategoria = categoria.idCategoria and "+
                             "nomeCat like \""+categoria+"\"and "+
                             "cor.idCor = item.idCor ");
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonBuscarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBuscarMouseMoved
        
    }//GEN-LAST:event_jButtonBuscarMouseMoved

    private void jButtonBuscarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBuscarMouseDragged
       
    }//GEN-LAST:event_jButtonBuscarMouseDragged

    private void jButtonDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletarActionPerformed
        SGBD mybd = new SGBD();
        mybd.getConexaoMySQL();
        System.out.println(mybd.statusConection());
        Object objeto = defaultTableResultado.getValueAt(jTableResultado.getSelectedRow(), 0);
        Object objeto1 = defaultTableResultado.getValueAt(jTableResultado.getSelectedRow(), 1);
        objeto1.toString();
        Integer.parseInt((String) objeto);
        int Confirm = JOptionPane.showConfirmDialog(null,"Deseja excluir "+objeto1+"?","sim ou nao", JOptionPane.YES_NO_OPTION);
        if (Confirm == JOptionPane.YES_OPTION) {
        JOptionPane.showMessageDialog(null, ""+objeto1+" deletado com sucesso!!");
        mybd.alterarItemBd("delete from item where idItem = \""+objeto+"\"");
        defaultTableResultado.removeRow(jTableResultado.getSelectedRow());
        jLabelFoto.setVisible(false);
        mybd.fecharConexao();
        } 
    }//GEN-LAST:event_jButtonDeletarActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        SGBD mybd = new SGBD();
        mybd.getConexaoMySQL();
        System.out.println(mybd.statusConection());
        Object id = defaultTableResultado.getValueAt(jTableResultado.getSelectedRow(), 0);
        Integer.parseInt((String) id);
        Object nome = defaultTableResultado.getValueAt(jTableResultado.getSelectedRow(), 1);
        nome.toString();
        Object descricao = defaultTableResultado.getValueAt(jTableResultado.getSelectedRow(), 2);
        descricao.toString();
        Object cor = defaultTableResultado.getValueAt(jTableResultado.getSelectedRow(), 3);
        cor.toString();
        Object situacaoItem = defaultTableResultado.getValueAt(jTableResultado.getSelectedRow(), 4);
        situacaoItem.toString();
        int Confirm = JOptionPane.showConfirmDialog(null,"Deseja alterar "+nome+"?","sim ou nao", JOptionPane.YES_NO_OPTION);
        if (Confirm == JOptionPane.YES_OPTION) {
        JOptionPane.showMessageDialog(null, ""+nome+" alterado com sucesso!!");
        mybd.alterarItemBd("update item set idNome = (select idNome from nomeitem where nome = \""+nome+"\") where idItem = \""+id+"\"");
        mybd.alterarItemBd("update item set descricaoItem = \""+descricao+"\" where idItem = \""+id+"\"");
        mybd.alterarItemBd("update item set idCor = (select idCor from cor where nomeCor = \""+cor+"\") where idItem = \""+id+"\"");
        }
        mybd.fecharConexao();
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonFecharMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFecharMouseEntered
        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/FecharAzul.png")));       
    }//GEN-LAST:event_jButtonFecharMouseEntered

    private void jButtonFecharMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFecharMouseExited
        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/FecharPreto.png"))); 
    }//GEN-LAST:event_jButtonFecharMouseExited

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jButtonMinimizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMinimizarMouseEntered
        jButtonMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/MinimizarAzul.png")));
    }//GEN-LAST:event_jButtonMinimizarMouseEntered

    private void jButtonMinimizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMinimizarMouseExited
        jButtonMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/MinimizarPreto.png")));
    }//GEN-LAST:event_jButtonMinimizarMouseExited

    private void jButtonVoltarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonVoltarMouseEntered
        jButtonVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/VoltarAzul.png")));
    }//GEN-LAST:event_jButtonVoltarMouseEntered

    private void jButtonVoltarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonVoltarMouseExited
        jButtonVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/VoltarPreto.png")));
    }//GEN-LAST:event_jButtonVoltarMouseExited

    private void jButtonBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBuscarMouseEntered
        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/LupaAzul.png")));
    }//GEN-LAST:event_jButtonBuscarMouseEntered

    private void jButtonBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBuscarMouseExited
        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/LupaPreta.png")));
    }//GEN-LAST:event_jButtonBuscarMouseExited

    private void jTableResultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableResultadoMouseClicked
        jLabelFoto.setVisible(true);
        int linha = jTableResultado.getSelectedRow();
        System.out.println("Selecionado "+ linha);
        String id = (String) jTableResultado.getValueAt(linha, 0);
        System.out.println("Conteudo  "+ id);
        if(itemSelecionado.load(id)){
            System.out.println("Item carregado: "+ itemSelecionado.getIdItem());
        }
        popular(jLabelFoto, itemSelecionado.getFotoItem());
    }//GEN-LAST:event_jTableResultadoMouseClicked

    private void jButtonAlterarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAlterarMouseEntered
        jButtonAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/LapisAzul.png")));
    }//GEN-LAST:event_jButtonAlterarMouseEntered

    private void jButtonAlterarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAlterarMouseExited
        jButtonAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/LapisPreto.png")));
    }//GEN-LAST:event_jButtonAlterarMouseExited

    private void jButtonDeletarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDeletarMouseEntered
        jButtonDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/LixeiraAzul.png")));
    }//GEN-LAST:event_jButtonDeletarMouseEntered

    private void jButtonDeletarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDeletarMouseExited
        jButtonDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/LixeiraPreta.png")));
    }//GEN-LAST:event_jButtonDeletarMouseExited

    private void jPanelFundoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelFundoMousePressed
        point.x = evt.getX();
        point.y = evt.getY();
    }//GEN-LAST:event_jPanelFundoMousePressed

    private void jPanelFundoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelFundoMouseDragged
        Point p = janelaControl.getLocation();
        janelaControl.setLocation(p.x + evt.getX() - point.x, p.y + evt.getY() - point.y);
    }//GEN-LAST:event_jPanelFundoMouseDragged

    private void jButtonMinimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMinimizarMouseClicked
        janelaControl.setExtendedState(janelaControl.ICONIFIED);
    }//GEN-LAST:event_jButtonMinimizarMouseClicked

    public void popular(JLabel label, String imagem){
        //atribui imagem nos labels desejados
        
        ImageIcon icon = new ImageIcon(imagem, "imagem");
        Image img = icon.getImage();
        Image nova = getScaledImage(img, 330,330);
        icon.setImage(nova);
        label.setIcon(icon); 
    }
      
    private Image getScaledImage(Image srcImg, int w, int h){
        //Redimensiona a imagem para o tamanho desejado
        BufferedImage resizedImg = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2 = resizedImg.createGraphics();

        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(srcImg, 0, 0, w, h, null);
        g2.dispose();

        return resizedImg;
    }
    
    private static void popularComboBoxNome(String sql){
        SGBD mybd = new SGBD();
        
        mybd.getConexaoMySQL();
        ArrayList strList = new ArrayList();
        System.out.println(mybd.statusConection());
        
        
        //"SELECT nome FROM nome, categoria WHERE nomeCat = 'Eletrônicos' and categoria.`idCategoria` = nome.`idCategoria`")
        ResultSet rs = mybd.consultarItemBd(sql);
       
        String nome;
        strList.add("Todos");
        try {
            rs.beforeFirst();
            while(rs.next()){
                nome = rs.getString("nome");
                strList.add(nome);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        defaultComboBoxNome = new DefaultComboBoxModel(strList.toArray());
        jComboBoxNome.setRenderer(new MyCellRender(000,191,255));
        jComboBoxNome.setBackground(Color.white);
        
        mybd.fecharConexao();
        
    }
    
    private static void popularComboBoxCategoria(){
        SGBD mybd = new SGBD();
        
        mybd.getConexaoMySQL();
        ArrayList strList = new ArrayList();
        System.out.println(mybd.statusConection());
        
        
        
        ResultSet rs = mybd.consultarItemBd("select distinct categoria.nomeCat " +
                                                "from nomeItem, item, categoria " +
                                                "where item.idNome = nomeItem.idNome and " +
                                                "nomeItem.idCategoria = categoria.idCategoria;");
       
        String nome;
        strList.add("Todas");
        try {
            rs.beforeFirst();
            while(rs.next()){
                nome = rs.getString("nomeCat");
                strList.add(nome);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        defaultComboBoxCategoria = new DefaultComboBoxModel(strList.toArray());
        jComboBoxCategoria.setRenderer(new MyCellRender(000,191,255));
        jComboBoxCategoria.setBackground(Color.white);
        
        
        mybd.fecharConexao();
        
    }
    /**
     * @param args the command line arguments
     */
    public static void mostrar() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BuscarAdministrador buscaUser = new BuscarAdministrador();
                buscaUser.setVisible(true);
                janelaControl = buscaUser;
            }
        });
    }
    
    public static void mostrar(String result) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BuscarAdministrador buscaUser = new BuscarAdministrador(result);
                buscaUser.setVisible(true);
                janelaControl = buscaUser;
            }
        });
//        if(janelaControlRequerimento != null){
//            janelaControlRequerimento.dispose();
//        }
    }
    
   
    
    private  void popularResultado(String resultado){
            String[] colunas = new String[5];
            SGBD mybd = new SGBD();

            mybd.getConexaoMySQL();
            ArrayList strList = new ArrayList();
            System.out.println(mybd.statusConection());

          
            ResultSet rs;
            rs = mybd.consultarItemBd(resultado);
            String nome;
            strList.add("Selecionar");
            defaultTableResultado = (DefaultTableModel) jTableResultado.getModel();
            int linhasTabela = defaultTableResultado.getRowCount(), x = 0;
            if(linhasTabela > 0){
                for(x = 0; x < linhasTabela; x++){
                    defaultTableResultado.removeRow(0);
                }
            }
            try {
                rs.beforeFirst();
                while(rs.next()){
                    colunas[0] = Integer.toString(rs.getInt(1));
                    colunas[1] = rs.getString(2);
                    colunas[2] = rs.getString(3);
        
                    colunas[3] = rs.getString(4);
                    colunas[4] = rs.getString(5);
                    if(rs.getString(5).equals("1")){
                        colunas[4] = "retirado";
                    }else{
                        colunas[4] = "disponível";
                    }
                    defaultTableResultado.addRow(colunas);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, ex);
            }
            mybd.fecharConexao();
        
    }
    
    public void showFrame(){
        janelaControl.setVisible(true);
        janelaControl.setAlwaysOnTop(true);
        janelaControl.setAlwaysOnTop(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonDeletar;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonMinimizar;
    private javax.swing.JButton jButtonVoltar;
    private static javax.swing.JComboBox<String> jComboBoxCategoria;
    private static javax.swing.JComboBox<String> jComboBoxNome;
    private javax.swing.JLabel jLabelCategoria;
    private javax.swing.JLabel jLabelFoto;
    private javax.swing.JLabel jLabelLogoFindesk;
    private javax.swing.JLabel jLabelPalavraChave;
    private javax.swing.JPanel jPanelFundo;
    private javax.swing.JScrollPane jScrollPaneResultado;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTableResultado;
    // End of variables declaration//GEN-END:variables
}
